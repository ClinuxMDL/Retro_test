{"class_name": "Model", "keras_version": "2.0.1", "config": {"layers": [{"class_name": "InputLayer", "config": {"dtype": "float32", "batch_input_shape": [null, null, null, 32], "name": "H_lost", "sparse": false}, "inbound_nodes": [], "name": "H_lost"}, {"class_name": "InputLayer", "config": {"dtype": "float32", "batch_input_shape": [null, null, null, 32], "name": "H_gain", "sparse": false}, "inbound_nodes": [], "name": "H_gain"}, {"class_name": "InputLayer", "config": {"dtype": "float32", "batch_input_shape": [null, null, null, 68], "name": "bond_lost", "sparse": false}, "inbound_nodes": [], "name": "bond_lost"}, {"class_name": "InputLayer", "config": {"dtype": "float32", "batch_input_shape": [null, null, null, 68], "name": "bond_gain", "sparse": false}, "inbound_nodes": [], "name": "bond_gain"}, {"class_name": "Lambda", "config": {"function": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000S\u0000\u0001\u0000sG\u0000\u0000\u0000t\u0000\u0000j\u0001\u0000|\u0000\u0000|\u0000\u0000j\u0002\u0000d\u0001\u0000\u0019|\u0000\u0000j\u0002\u0000d\u0002\u0000\u0019\u0014|\u0000\u0000j\u0002\u0000d\u0003\u0000\u0019\u0014|\u0000\u0000j\u0002\u0000d\u0004\u0000\u0019f\u0002\u0000d\u0005\u0000|\u0000\u0000j\u0003\u0000d\u0003\u0000\u0018\u0083\u0002\u0001S(\u0006\u0000\u0000\u0000Ni\u0000\u0000\u0000\u0000i\u0001\u0000\u0000\u0000i\u0002\u0000\u0000\u0000i\u0003\u0000\u0000\u0000t\u0004\u0000\u0000\u0000ndim(\u0004\u0000\u0000\u0000t\u0001\u0000\u0000\u0000Tt\u0007\u0000\u0000\u0000reshapet\u0005\u0000\u0000\u0000shapeR\u0000\u0000\u0000\u0000(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s<\u0000\u0000\u0000ochem_predict_nn/main/score_candidates_from_edits_compact.pyt\b\u0000\u0000\u0000<lambda>B\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "name": "flatten_H_lost", "trainable": true, "function_type": "lambda", "arguments": {}, "output_shape": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000S\u0000\u0001\u0000s\f\u0000\u0000\u0000d\u0002\u0000|\u0000\u0000d\u0001\u0000\u001f\u0017S(\u0003\u0000\u0000\u0000Ni\u0003\u0000\u0000\u0000(\u0001\u0000\u0000\u0000N(\u0001\u0000\u0000\u0000t\u0004\u0000\u0000\u0000None(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s<\u0000\u0000\u0000ochem_predict_nn/main/score_candidates_from_edits_compact.pyt\b\u0000\u0000\u0000<lambda>C\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "output_shape_type": "lambda"}, "inbound_nodes": [[["H_lost", 0, 0, {}]]], "name": "flatten_H_lost"}, {"class_name": "Lambda", "config": {"function": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000S\u0000\u0001\u0000sG\u0000\u0000\u0000t\u0000\u0000j\u0001\u0000|\u0000\u0000|\u0000\u0000j\u0002\u0000d\u0001\u0000\u0019|\u0000\u0000j\u0002\u0000d\u0002\u0000\u0019\u0014|\u0000\u0000j\u0002\u0000d\u0003\u0000\u0019\u0014|\u0000\u0000j\u0002\u0000d\u0004\u0000\u0019f\u0002\u0000d\u0005\u0000|\u0000\u0000j\u0003\u0000d\u0003\u0000\u0018\u0083\u0002\u0001S(\u0006\u0000\u0000\u0000Ni\u0000\u0000\u0000\u0000i\u0001\u0000\u0000\u0000i\u0002\u0000\u0000\u0000i\u0003\u0000\u0000\u0000t\u0004\u0000\u0000\u0000ndim(\u0004\u0000\u0000\u0000t\u0001\u0000\u0000\u0000Tt\u0007\u0000\u0000\u0000reshapet\u0005\u0000\u0000\u0000shapeR\u0000\u0000\u0000\u0000(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s<\u0000\u0000\u0000ochem_predict_nn/main/score_candidates_from_edits_compact.pyt\b\u0000\u0000\u0000<lambda>B\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "name": "flatten_H_gain", "trainable": true, "function_type": "lambda", "arguments": {}, "output_shape": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000S\u0000\u0001\u0000s\f\u0000\u0000\u0000d\u0002\u0000|\u0000\u0000d\u0001\u0000\u001f\u0017S(\u0003\u0000\u0000\u0000Ni\u0003\u0000\u0000\u0000(\u0001\u0000\u0000\u0000N(\u0001\u0000\u0000\u0000t\u0004\u0000\u0000\u0000None(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s<\u0000\u0000\u0000ochem_predict_nn/main/score_candidates_from_edits_compact.pyt\b\u0000\u0000\u0000<lambda>C\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "output_shape_type": "lambda"}, "inbound_nodes": [[["H_gain", 0, 0, {}]]], "name": "flatten_H_gain"}, {"class_name": "Lambda", "config": {"function": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000S\u0000\u0001\u0000sG\u0000\u0000\u0000t\u0000\u0000j\u0001\u0000|\u0000\u0000|\u0000\u0000j\u0002\u0000d\u0001\u0000\u0019|\u0000\u0000j\u0002\u0000d\u0002\u0000\u0019\u0014|\u0000\u0000j\u0002\u0000d\u0003\u0000\u0019\u0014|\u0000\u0000j\u0002\u0000d\u0004\u0000\u0019f\u0002\u0000d\u0005\u0000|\u0000\u0000j\u0003\u0000d\u0003\u0000\u0018\u0083\u0002\u0001S(\u0006\u0000\u0000\u0000Ni\u0000\u0000\u0000\u0000i\u0001\u0000\u0000\u0000i\u0002\u0000\u0000\u0000i\u0003\u0000\u0000\u0000t\u0004\u0000\u0000\u0000ndim(\u0004\u0000\u0000\u0000t\u0001\u0000\u0000\u0000Tt\u0007\u0000\u0000\u0000reshapet\u0005\u0000\u0000\u0000shapeR\u0000\u0000\u0000\u0000(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s<\u0000\u0000\u0000ochem_predict_nn/main/score_candidates_from_edits_compact.pyt\b\u0000\u0000\u0000<lambda>B\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "name": "flatten_bond_lost", "trainable": true, "function_type": "lambda", "arguments": {}, "output_shape": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000S\u0000\u0001\u0000s\f\u0000\u0000\u0000d\u0002\u0000|\u0000\u0000d\u0001\u0000\u001f\u0017S(\u0003\u0000\u0000\u0000Ni\u0003\u0000\u0000\u0000(\u0001\u0000\u0000\u0000N(\u0001\u0000\u0000\u0000t\u0004\u0000\u0000\u0000None(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s<\u0000\u0000\u0000ochem_predict_nn/main/score_candidates_from_edits_compact.pyt\b\u0000\u0000\u0000<lambda>C\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "output_shape_type": "lambda"}, "inbound_nodes": [[["bond_lost", 0, 0, {}]]], "name": "flatten_bond_lost"}, {"class_name": "Lambda", "config": {"function": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000S\u0000\u0001\u0000sG\u0000\u0000\u0000t\u0000\u0000j\u0001\u0000|\u0000\u0000|\u0000\u0000j\u0002\u0000d\u0001\u0000\u0019|\u0000\u0000j\u0002\u0000d\u0002\u0000\u0019\u0014|\u0000\u0000j\u0002\u0000d\u0003\u0000\u0019\u0014|\u0000\u0000j\u0002\u0000d\u0004\u0000\u0019f\u0002\u0000d\u0005\u0000|\u0000\u0000j\u0003\u0000d\u0003\u0000\u0018\u0083\u0002\u0001S(\u0006\u0000\u0000\u0000Ni\u0000\u0000\u0000\u0000i\u0001\u0000\u0000\u0000i\u0002\u0000\u0000\u0000i\u0003\u0000\u0000\u0000t\u0004\u0000\u0000\u0000ndim(\u0004\u0000\u0000\u0000t\u0001\u0000\u0000\u0000Tt\u0007\u0000\u0000\u0000reshapet\u0005\u0000\u0000\u0000shapeR\u0000\u0000\u0000\u0000(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s<\u0000\u0000\u0000ochem_predict_nn/main/score_candidates_from_edits_compact.pyt\b\u0000\u0000\u0000<lambda>B\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "name": "flatten_bond_gain", "trainable": true, "function_type": "lambda", "arguments": {}, "output_shape": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000S\u0000\u0001\u0000s\f\u0000\u0000\u0000d\u0002\u0000|\u0000\u0000d\u0001\u0000\u001f\u0017S(\u0003\u0000\u0000\u0000Ni\u0003\u0000\u0000\u0000(\u0001\u0000\u0000\u0000N(\u0001\u0000\u0000\u0000t\u0004\u0000\u0000\u0000None(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s<\u0000\u0000\u0000ochem_predict_nn/main/score_candidates_from_edits_compact.pyt\b\u0000\u0000\u0000<lambda>C\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "output_shape_type": "lambda"}, "inbound_nodes": [[["bond_gain", 0, 0, {}]]], "name": "flatten_bond_gain"}, {"class_name": "Dense", "config": {"kernel_initializer": {"class_name": "VarianceScaling", "config": {"distribution": "uniform", "scale": 1.0, "seed": null, "mode": "fan_avg"}}, "name": "embed H_lost 1", "kernel_constraint": null, "bias_regularizer": null, "bias_constraint": null, "activation": "tanh", "trainable": true, "kernel_regularizer": {"class_name": "L1L2", "config": {"l2": 0.0, "l1": 0.0}}, "bias_initializer": {"class_name": "Zeros", "config": {}}, "units": 200, "use_bias": true, "activity_regularizer": null}, "inbound_nodes": [[["flatten_H_lost", 0, 0, {}]]], "name": "embed H_lost 1"}, {"class_name": "Dense", "config": {"kernel_initializer": {"class_name": "VarianceScaling", "config": {"distribution": "uniform", "scale": 1.0, "seed": null, "mode": "fan_avg"}}, "name": "embed H_gain 1", "kernel_constraint": null, "bias_regularizer": null, "bias_constraint": null, "activation": "tanh", "trainable": true, "kernel_regularizer": {"class_name": "L1L2", "config": {"l2": 0.0, "l1": 0.0}}, "bias_initializer": {"class_name": "Zeros", "config": {}}, "units": 200, "use_bias": true, "activity_regularizer": null}, "inbound_nodes": [[["flatten_H_gain", 0, 0, {}]]], "name": "embed H_gain 1"}, {"class_name": "Dense", "config": {"kernel_initializer": {"class_name": "VarianceScaling", "config": {"distribution": "uniform", "scale": 1.0, "seed": null, "mode": "fan_avg"}}, "name": "embed bond_lost 1", "kernel_constraint": null, "bias_regularizer": null, "bias_constraint": null, "activation": "tanh", "trainable": true, "kernel_regularizer": {"class_name": "L1L2", "config": {"l2": 0.0, "l1": 0.0}}, "bias_initializer": {"class_name": "Zeros", "config": {}}, "units": 200, "use_bias": true, "activity_regularizer": null}, "inbound_nodes": [[["flatten_bond_lost", 0, 0, {}]]], "name": "embed bond_lost 1"}, {"class_name": "Dense", "config": {"kernel_initializer": {"class_name": "VarianceScaling", "config": {"distribution": "uniform", "scale": 1.0, "seed": null, "mode": "fan_avg"}}, "name": "embed bond_gain 1", "kernel_constraint": null, "bias_regularizer": null, "bias_constraint": null, "activation": "tanh", "trainable": true, "kernel_regularizer": {"class_name": "L1L2", "config": {"l2": 0.0, "l1": 0.0}}, "bias_initializer": {"class_name": "Zeros", "config": {}}, "units": 200, "use_bias": true, "activity_regularizer": null}, "inbound_nodes": [[["flatten_bond_gain", 0, 0, {}]]], "name": "embed bond_gain 1"}, {"class_name": "Dense", "config": {"kernel_initializer": {"class_name": "VarianceScaling", "config": {"distribution": "uniform", "scale": 1.0, "seed": null, "mode": "fan_avg"}}, "name": "embed H_lost 2", "kernel_constraint": null, "bias_regularizer": null, "bias_constraint": null, "activation": "tanh", "trainable": true, "kernel_regularizer": {"class_name": "L1L2", "config": {"l2": 0.0, "l1": 0.0}}, "bias_initializer": {"class_name": "Zeros", "config": {}}, "units": 100, "use_bias": true, "activity_regularizer": null}, "inbound_nodes": [[["embed H_lost 1", 0, 0, {}]]], "name": "embed H_lost 2"}, {"class_name": "Dense", "config": {"kernel_initializer": {"class_name": "VarianceScaling", "config": {"distribution": "uniform", "scale": 1.0, "seed": null, "mode": "fan_avg"}}, "name": "embed H_gain 2", "kernel_constraint": null, "bias_regularizer": null, "bias_constraint": null, "activation": "tanh", "trainable": true, "kernel_regularizer": {"class_name": "L1L2", "config": {"l2": 0.0, "l1": 0.0}}, "bias_initializer": {"class_name": "Zeros", "config": {}}, "units": 100, "use_bias": true, "activity_regularizer": null}, "inbound_nodes": [[["embed H_gain 1", 0, 0, {}]]], "name": "embed H_gain 2"}, {"class_name": "Dense", "config": {"kernel_initializer": {"class_name": "VarianceScaling", "config": {"distribution": "uniform", "scale": 1.0, "seed": null, "mode": "fan_avg"}}, "name": "embed bond_lost 2", "kernel_constraint": null, "bias_regularizer": null, "bias_constraint": null, "activation": "tanh", "trainable": true, "kernel_regularizer": {"class_name": "L1L2", "config": {"l2": 0.0, "l1": 0.0}}, "bias_initializer": {"class_name": "Zeros", "config": {}}, "units": 100, "use_bias": true, "activity_regularizer": null}, "inbound_nodes": [[["embed bond_lost 1", 0, 0, {}]]], "name": "embed bond_lost 2"}, {"class_name": "Dense", "config": {"kernel_initializer": {"class_name": "VarianceScaling", "config": {"distribution": "uniform", "scale": 1.0, "seed": null, "mode": "fan_avg"}}, "name": "embed bond_gain 2", "kernel_constraint": null, "bias_regularizer": null, "bias_constraint": null, "activation": "tanh", "trainable": true, "kernel_regularizer": {"class_name": "L1L2", "config": {"l2": 0.0, "l1": 0.0}}, "bias_initializer": {"class_name": "Zeros", "config": {}}, "units": 100, "use_bias": true, "activity_regularizer": null}, "inbound_nodes": [[["embed bond_gain 1", 0, 0, {}]]], "name": "embed bond_gain 2"}, {"class_name": "Dense", "config": {"kernel_initializer": {"class_name": "VarianceScaling", "config": {"distribution": "uniform", "scale": 1.0, "seed": null, "mode": "fan_avg"}}, "name": "embed H_lost 3", "kernel_constraint": null, "bias_regularizer": null, "bias_constraint": null, "activation": "tanh", "trainable": true, "kernel_regularizer": {"class_name": "L1L2", "config": {"l2": 0.0, "l1": 0.0}}, "bias_initializer": {"class_name": "Zeros", "config": {}}, "units": 50, "use_bias": true, "activity_regularizer": null}, "inbound_nodes": [[["embed H_lost 2", 0, 0, {}]]], "name": "embed H_lost 3"}, {"class_name": "Dense", "config": {"kernel_initializer": {"class_name": "VarianceScaling", "config": {"distribution": "uniform", "scale": 1.0, "seed": null, "mode": "fan_avg"}}, "name": "embed H_gain 3", "kernel_constraint": null, "bias_regularizer": null, "bias_constraint": null, "activation": "tanh", "trainable": true, "kernel_regularizer": {"class_name": "L1L2", "config": {"l2": 0.0, "l1": 0.0}}, "bias_initializer": {"class_name": "Zeros", "config": {}}, "units": 50, "use_bias": true, "activity_regularizer": null}, "inbound_nodes": [[["embed H_gain 2", 0, 0, {}]]], "name": "embed H_gain 3"}, {"class_name": "Dense", "config": {"kernel_initializer": {"class_name": "VarianceScaling", "config": {"distribution": "uniform", "scale": 1.0, "seed": null, "mode": "fan_avg"}}, "name": "embed bond_lost 3", "kernel_constraint": null, "bias_regularizer": null, "bias_constraint": null, "activation": "tanh", "trainable": true, "kernel_regularizer": {"class_name": "L1L2", "config": {"l2": 0.0, "l1": 0.0}}, "bias_initializer": {"class_name": "Zeros", "config": {}}, "units": 50, "use_bias": true, "activity_regularizer": null}, "inbound_nodes": [[["embed bond_lost 2", 0, 0, {}]]], "name": "embed bond_lost 3"}, {"class_name": "Dense", "config": {"kernel_initializer": {"class_name": "VarianceScaling", "config": {"distribution": "uniform", "scale": 1.0, "seed": null, "mode": "fan_avg"}}, "name": "embed bond_gain 3", "kernel_constraint": null, "bias_regularizer": null, "bias_constraint": null, "activation": "tanh", "trainable": true, "kernel_regularizer": {"class_name": "L1L2", "config": {"l2": 0.0, "l1": 0.0}}, "bias_initializer": {"class_name": "Zeros", "config": {}}, "units": 50, "use_bias": true, "activity_regularizer": null}, "inbound_nodes": [[["embed bond_gain 2", 0, 0, {}]]], "name": "embed bond_gain 3"}, {"class_name": "Merge", "config": {"name": "expand H_lost edits", "concat_axis": -1, "mode_type": "lambda", "dot_axes": -1, "output_mask_type": "raw", "arguments": {}, "output_mask": null, "mode": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0007\u0000\u0000\u0000S\u0000\u0001\u0000s]\u0000\u0000\u0000t\u0000\u0000j\u0001\u0000|\u0000\u0000d\u0001\u0000\u0019|\u0000\u0000d\u0002\u0000\u0019j\u0002\u0000d\u0001\u0000\u0019|\u0000\u0000d\u0002\u0000\u0019j\u0002\u0000d\u0002\u0000\u0019|\u0000\u0000d\u0002\u0000\u0019j\u0002\u0000d\u0003\u0000\u0019|\u0000\u0000d\u0001\u0000\u0019j\u0002\u0000d\u0002\u0000\u0019f\u0004\u0000d\u0004\u0000|\u0000\u0000d\u0001\u0000\u0019j\u0003\u0000d\u0003\u0000\u0017\u0083\u0002\u0001S(\u0005\u0000\u0000\u0000Ni\u0000\u0000\u0000\u0000i\u0001\u0000\u0000\u0000i\u0002\u0000\u0000\u0000t\u0004\u0000\u0000\u0000ndim(\u0004\u0000\u0000\u0000t\u0001\u0000\u0000\u0000Tt\u0007\u0000\u0000\u0000reshapet\u0005\u0000\u0000\u0000shapeR\u0000\u0000\u0000\u0000(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s<\u0000\u0000\u0000ochem_predict_nn/main/score_candidates_from_edits_compact.pyt\b\u0000\u0000\u0000<lambda>l\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "output_shape": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000S\u0000\u0001\u0000s\u0018\u0000\u0000\u0000|\u0000\u0000d\u0001\u0000\u0019d\u0002\u0000 |\u0000\u0000d\u0003\u0000\u0019d\u0001\u0000\u001f\u0017S(\u0004\u0000\u0000\u0000Ni\u0001\u0000\u0000\u0000i\u0003\u0000\u0000\u0000i\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s<\u0000\u0000\u0000ochem_predict_nn/main/score_candidates_from_edits_compact.pyt\b\u0000\u0000\u0000<lambda>m\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "output_shape_type": "lambda"}, "inbound_nodes": [[["embed H_lost 3", 0, 0, {"mask": [null, null]}], ["H_lost", 0, 0, {"mask": [null, null]}]]], "name": "expand H_lost edits"}, {"class_name": "Merge", "config": {"name": "expand H_gain edits", "concat_axis": -1, "mode_type": "lambda", "dot_axes": -1, "output_mask_type": "raw", "arguments": {}, "output_mask": null, "mode": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0007\u0000\u0000\u0000S\u0000\u0001\u0000s]\u0000\u0000\u0000t\u0000\u0000j\u0001\u0000|\u0000\u0000d\u0001\u0000\u0019|\u0000\u0000d\u0002\u0000\u0019j\u0002\u0000d\u0001\u0000\u0019|\u0000\u0000d\u0002\u0000\u0019j\u0002\u0000d\u0002\u0000\u0019|\u0000\u0000d\u0002\u0000\u0019j\u0002\u0000d\u0003\u0000\u0019|\u0000\u0000d\u0001\u0000\u0019j\u0002\u0000d\u0002\u0000\u0019f\u0004\u0000d\u0004\u0000|\u0000\u0000d\u0001\u0000\u0019j\u0003\u0000d\u0003\u0000\u0017\u0083\u0002\u0001S(\u0005\u0000\u0000\u0000Ni\u0000\u0000\u0000\u0000i\u0001\u0000\u0000\u0000i\u0002\u0000\u0000\u0000t\u0004\u0000\u0000\u0000ndim(\u0004\u0000\u0000\u0000t\u0001\u0000\u0000\u0000Tt\u0007\u0000\u0000\u0000reshapet\u0005\u0000\u0000\u0000shapeR\u0000\u0000\u0000\u0000(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s<\u0000\u0000\u0000ochem_predict_nn/main/score_candidates_from_edits_compact.pyt\b\u0000\u0000\u0000<lambda>l\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "output_shape": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000S\u0000\u0001\u0000s\u0018\u0000\u0000\u0000|\u0000\u0000d\u0001\u0000\u0019d\u0002\u0000 |\u0000\u0000d\u0003\u0000\u0019d\u0001\u0000\u001f\u0017S(\u0004\u0000\u0000\u0000Ni\u0001\u0000\u0000\u0000i\u0003\u0000\u0000\u0000i\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s<\u0000\u0000\u0000ochem_predict_nn/main/score_candidates_from_edits_compact.pyt\b\u0000\u0000\u0000<lambda>m\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "output_shape_type": "lambda"}, "inbound_nodes": [[["embed H_gain 3", 0, 0, {"mask": [null, null]}], ["H_gain", 0, 0, {"mask": [null, null]}]]], "name": "expand H_gain edits"}, {"class_name": "Merge", "config": {"name": "expand bond_lost edits", "concat_axis": -1, "mode_type": "lambda", "dot_axes": -1, "output_mask_type": "raw", "arguments": {}, "output_mask": null, "mode": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0007\u0000\u0000\u0000S\u0000\u0001\u0000s]\u0000\u0000\u0000t\u0000\u0000j\u0001\u0000|\u0000\u0000d\u0001\u0000\u0019|\u0000\u0000d\u0002\u0000\u0019j\u0002\u0000d\u0001\u0000\u0019|\u0000\u0000d\u0002\u0000\u0019j\u0002\u0000d\u0002\u0000\u0019|\u0000\u0000d\u0002\u0000\u0019j\u0002\u0000d\u0003\u0000\u0019|\u0000\u0000d\u0001\u0000\u0019j\u0002\u0000d\u0002\u0000\u0019f\u0004\u0000d\u0004\u0000|\u0000\u0000d\u0001\u0000\u0019j\u0003\u0000d\u0003\u0000\u0017\u0083\u0002\u0001S(\u0005\u0000\u0000\u0000Ni\u0000\u0000\u0000\u0000i\u0001\u0000\u0000\u0000i\u0002\u0000\u0000\u0000t\u0004\u0000\u0000\u0000ndim(\u0004\u0000\u0000\u0000t\u0001\u0000\u0000\u0000Tt\u0007\u0000\u0000\u0000reshapet\u0005\u0000\u0000\u0000shapeR\u0000\u0000\u0000\u0000(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s<\u0000\u0000\u0000ochem_predict_nn/main/score_candidates_from_edits_compact.pyt\b\u0000\u0000\u0000<lambda>l\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "output_shape": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000S\u0000\u0001\u0000s\u0018\u0000\u0000\u0000|\u0000\u0000d\u0001\u0000\u0019d\u0002\u0000 |\u0000\u0000d\u0003\u0000\u0019d\u0001\u0000\u001f\u0017S(\u0004\u0000\u0000\u0000Ni\u0001\u0000\u0000\u0000i\u0003\u0000\u0000\u0000i\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s<\u0000\u0000\u0000ochem_predict_nn/main/score_candidates_from_edits_compact.pyt\b\u0000\u0000\u0000<lambda>m\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "output_shape_type": "lambda"}, "inbound_nodes": [[["embed bond_lost 3", 0, 0, {"mask": [null, null]}], ["bond_lost", 0, 0, {"mask": [null, null]}]]], "name": "expand bond_lost edits"}, {"class_name": "Merge", "config": {"name": "expand bond_gain edits", "concat_axis": -1, "mode_type": "lambda", "dot_axes": -1, "output_mask_type": "raw", "arguments": {}, "output_mask": null, "mode": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0007\u0000\u0000\u0000S\u0000\u0001\u0000s]\u0000\u0000\u0000t\u0000\u0000j\u0001\u0000|\u0000\u0000d\u0001\u0000\u0019|\u0000\u0000d\u0002\u0000\u0019j\u0002\u0000d\u0001\u0000\u0019|\u0000\u0000d\u0002\u0000\u0019j\u0002\u0000d\u0002\u0000\u0019|\u0000\u0000d\u0002\u0000\u0019j\u0002\u0000d\u0003\u0000\u0019|\u0000\u0000d\u0001\u0000\u0019j\u0002\u0000d\u0002\u0000\u0019f\u0004\u0000d\u0004\u0000|\u0000\u0000d\u0001\u0000\u0019j\u0003\u0000d\u0003\u0000\u0017\u0083\u0002\u0001S(\u0005\u0000\u0000\u0000Ni\u0000\u0000\u0000\u0000i\u0001\u0000\u0000\u0000i\u0002\u0000\u0000\u0000t\u0004\u0000\u0000\u0000ndim(\u0004\u0000\u0000\u0000t\u0001\u0000\u0000\u0000Tt\u0007\u0000\u0000\u0000reshapet\u0005\u0000\u0000\u0000shapeR\u0000\u0000\u0000\u0000(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s<\u0000\u0000\u0000ochem_predict_nn/main/score_candidates_from_edits_compact.pyt\b\u0000\u0000\u0000<lambda>l\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "output_shape": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000S\u0000\u0001\u0000s\u0018\u0000\u0000\u0000|\u0000\u0000d\u0001\u0000\u0019d\u0002\u0000 |\u0000\u0000d\u0003\u0000\u0019d\u0001\u0000\u001f\u0017S(\u0004\u0000\u0000\u0000Ni\u0001\u0000\u0000\u0000i\u0003\u0000\u0000\u0000i\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s<\u0000\u0000\u0000ochem_predict_nn/main/score_candidates_from_edits_compact.pyt\b\u0000\u0000\u0000<lambda>m\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "output_shape_type": "lambda"}, "inbound_nodes": [[["embed bond_gain 3", 0, 0, {"mask": [null, null]}], ["bond_gain", 0, 0, {"mask": [null, null]}]]], "name": "expand bond_gain edits"}, {"class_name": "Lambda", "config": {"function": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0004\u0000\u0000\u0000S\u0000\u0001\u0000s\u0013\u0000\u0000\u0000t\u0000\u0000j\u0001\u0000|\u0000\u0000d\u0001\u0000d\u0002\u0000\u0083\u0001\u0001S(\u0003\u0000\u0000\u0000Nt\u0004\u0000\u0000\u0000axisi\u0002\u0000\u0000\u0000(\u0002\u0000\u0000\u0000t\u0001\u0000\u0000\u0000Kt\u0003\u0000\u0000\u0000sum(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s<\u0000\u0000\u0000ochem_predict_nn/main/score_candidates_from_edits_compact.pyt\b\u0000\u0000\u0000<lambda>u\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "name": "sum H_lost", "trainable": true, "function_type": "lambda", "arguments": {}, "output_shape": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000S\u0000\u0001\u0000s\u0010\u0000\u0000\u0000|\u0000\u0000d\u0001\u0000 |\u0000\u0000d\u0002\u0000\u001f\u0017S(\u0003\u0000\u0000\u0000Ni\u0002\u0000\u0000\u0000i\u0003\u0000\u0000\u0000(\u0000\u0000\u0000\u0000(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s<\u0000\u0000\u0000ochem_predict_nn/main/score_candidates_from_edits_compact.pyt\b\u0000\u0000\u0000<lambda>v\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "output_shape_type": "lambda"}, "inbound_nodes": [[["expand H_lost edits", 0, 0, {}]]], "name": "sum H_lost"}, {"class_name": "Lambda", "config": {"function": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0004\u0000\u0000\u0000S\u0000\u0001\u0000s\u0013\u0000\u0000\u0000t\u0000\u0000j\u0001\u0000|\u0000\u0000d\u0001\u0000d\u0002\u0000\u0083\u0001\u0001S(\u0003\u0000\u0000\u0000Nt\u0004\u0000\u0000\u0000axisi\u0002\u0000\u0000\u0000(\u0002\u0000\u0000\u0000t\u0001\u0000\u0000\u0000Kt\u0003\u0000\u0000\u0000sum(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s<\u0000\u0000\u0000ochem_predict_nn/main/score_candidates_from_edits_compact.pyt\b\u0000\u0000\u0000<lambda>u\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "name": "sum H_gain", "trainable": true, "function_type": "lambda", "arguments": {}, "output_shape": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000S\u0000\u0001\u0000s\u0010\u0000\u0000\u0000|\u0000\u0000d\u0001\u0000 |\u0000\u0000d\u0002\u0000\u001f\u0017S(\u0003\u0000\u0000\u0000Ni\u0002\u0000\u0000\u0000i\u0003\u0000\u0000\u0000(\u0000\u0000\u0000\u0000(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s<\u0000\u0000\u0000ochem_predict_nn/main/score_candidates_from_edits_compact.pyt\b\u0000\u0000\u0000<lambda>v\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "output_shape_type": "lambda"}, "inbound_nodes": [[["expand H_gain edits", 0, 0, {}]]], "name": "sum H_gain"}, {"class_name": "Lambda", "config": {"function": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0004\u0000\u0000\u0000S\u0000\u0001\u0000s\u0013\u0000\u0000\u0000t\u0000\u0000j\u0001\u0000|\u0000\u0000d\u0001\u0000d\u0002\u0000\u0083\u0001\u0001S(\u0003\u0000\u0000\u0000Nt\u0004\u0000\u0000\u0000axisi\u0002\u0000\u0000\u0000(\u0002\u0000\u0000\u0000t\u0001\u0000\u0000\u0000Kt\u0003\u0000\u0000\u0000sum(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s<\u0000\u0000\u0000ochem_predict_nn/main/score_candidates_from_edits_compact.pyt\b\u0000\u0000\u0000<lambda>u\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "name": "sum bond_lost", "trainable": true, "function_type": "lambda", "arguments": {}, "output_shape": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000S\u0000\u0001\u0000s\u0010\u0000\u0000\u0000|\u0000\u0000d\u0001\u0000 |\u0000\u0000d\u0002\u0000\u001f\u0017S(\u0003\u0000\u0000\u0000Ni\u0002\u0000\u0000\u0000i\u0003\u0000\u0000\u0000(\u0000\u0000\u0000\u0000(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s<\u0000\u0000\u0000ochem_predict_nn/main/score_candidates_from_edits_compact.pyt\b\u0000\u0000\u0000<lambda>v\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "output_shape_type": "lambda"}, "inbound_nodes": [[["expand bond_lost edits", 0, 0, {}]]], "name": "sum bond_lost"}, {"class_name": "Lambda", "config": {"function": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0004\u0000\u0000\u0000S\u0000\u0001\u0000s\u0013\u0000\u0000\u0000t\u0000\u0000j\u0001\u0000|\u0000\u0000d\u0001\u0000d\u0002\u0000\u0083\u0001\u0001S(\u0003\u0000\u0000\u0000Nt\u0004\u0000\u0000\u0000axisi\u0002\u0000\u0000\u0000(\u0002\u0000\u0000\u0000t\u0001\u0000\u0000\u0000Kt\u0003\u0000\u0000\u0000sum(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s<\u0000\u0000\u0000ochem_predict_nn/main/score_candidates_from_edits_compact.pyt\b\u0000\u0000\u0000<lambda>u\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "name": "sum bond_gain", "trainable": true, "function_type": "lambda", "arguments": {}, "output_shape": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000S\u0000\u0001\u0000s\u0010\u0000\u0000\u0000|\u0000\u0000d\u0001\u0000 |\u0000\u0000d\u0002\u0000\u001f\u0017S(\u0003\u0000\u0000\u0000Ni\u0002\u0000\u0000\u0000i\u0003\u0000\u0000\u0000(\u0000\u0000\u0000\u0000(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s<\u0000\u0000\u0000ochem_predict_nn/main/score_candidates_from_edits_compact.pyt\b\u0000\u0000\u0000<lambda>v\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "output_shape_type": "lambda"}, "inbound_nodes": [[["expand bond_gain edits", 0, 0, {}]]], "name": "sum bond_gain"}, {"class_name": "Merge", "config": {"name": "sum_across edits", "concat_axis": -1, "mode_type": "raw", "dot_axes": -1, "output_mask_type": "raw", "arguments": {}, "output_mask": null, "mode": "sum", "output_shape": null, "output_shape_type": "raw"}, "inbound_nodes": [[["sum H_lost", 0, 0, {"mask": [null, null, null, null]}], ["sum H_gain", 0, 0, {"mask": [null, null, null, null]}], ["sum bond_lost", 0, 0, {"mask": [null, null, null, null]}], ["sum bond_gain", 0, 0, {"mask": [null, null, null, null]}]]], "name": "sum_across edits"}, {"class_name": "TimeDistributed", "config": {"layer": {"class_name": "Dense", "config": {"kernel_initializer": {"class_name": "VarianceScaling", "config": {"distribution": "uniform", "scale": 1.0, "seed": null, "mode": "fan_avg"}}, "name": "dense_1", "kernel_constraint": null, "bias_regularizer": null, "bias_constraint": null, "activation": "tanh", "trainable": true, "kernel_regularizer": {"class_name": "L1L2", "config": {"l2": 0.0, "l1": 0.0}}, "bias_initializer": {"class_name": "Zeros", "config": {}}, "units": 50, "use_bias": true, "activity_regularizer": null}}, "trainable": true, "name": "reaction embedding post-sum"}, "inbound_nodes": [[["sum_across edits", 0, 0, {}]]], "name": "reaction embedding post-sum"}, {"class_name": "TimeDistributed", "config": {"layer": {"class_name": "Dense", "config": {"kernel_initializer": {"class_name": "VarianceScaling", "config": {"distribution": "uniform", "scale": 1.0, "seed": null, "mode": "fan_avg"}}, "name": "dense_2", "kernel_constraint": null, "bias_regularizer": null, "bias_constraint": null, "activation": "linear", "trainable": true, "kernel_regularizer": null, "bias_initializer": {"class_name": "Zeros", "config": {}}, "units": 1, "use_bias": true, "activity_regularizer": null}}, "trainable": true, "name": "feature to score"}, "inbound_nodes": [[["reaction embedding post-sum", 0, 0, {}]]], "name": "feature to score"}, {"class_name": "Lambda", "config": {"function": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000S\u0000\u0001\u0000s1\u0000\u0000\u0000t\u0000\u0000j\u0001\u0000|\u0000\u0000|\u0000\u0000j\u0002\u0000d\u0001\u0000\u0019|\u0000\u0000j\u0002\u0000d\u0002\u0000\u0019f\u0002\u0000d\u0003\u0000|\u0000\u0000j\u0003\u0000d\u0002\u0000\u0018\u0083\u0002\u0001S(\u0004\u0000\u0000\u0000Ni\u0000\u0000\u0000\u0000i\u0001\u0000\u0000\u0000t\u0004\u0000\u0000\u0000ndim(\u0004\u0000\u0000\u0000t\u0001\u0000\u0000\u0000Tt\u0007\u0000\u0000\u0000reshapet\u0005\u0000\u0000\u0000shapeR\u0000\u0000\u0000\u0000(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s<\u0000\u0000\u0000ochem_predict_nn/main/score_candidates_from_edits_compact.pyt\b\u0000\u0000\u0000<lambda>\u0086\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "name": "flatten", "trainable": true, "function_type": "lambda", "arguments": {}, "output_shape": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000S\u0000\u0001\u0000s\u000e\u0000\u0000\u0000d\u0000\u0000|\u0000\u0000d\u0001\u0000\u0019f\u0002\u0000S(\u0002\u0000\u0000\u0000Ni\u0001\u0000\u0000\u0000(\u0001\u0000\u0000\u0000t\u0004\u0000\u0000\u0000None(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s<\u0000\u0000\u0000ochem_predict_nn/main/score_candidates_from_edits_compact.pyt\b\u0000\u0000\u0000<lambda>\u0087\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "output_shape_type": "lambda"}, "inbound_nodes": [[["feature to score", 0, 0, {}]]], "name": "flatten"}, {"class_name": "Activation", "config": {"activation": "softmax", "trainable": true, "name": "scores to probs"}, "inbound_nodes": [[["flatten", 0, 0, {}]]], "name": "scores to probs"}], "input_layers": [["H_lost", 0, 0], ["H_gain", 0, 0], ["bond_lost", 0, 0], ["bond_gain", 0, 0]], "output_layers": [["scores to probs", 0, 0]], "name": "model_1"}, "backend": "theano"}